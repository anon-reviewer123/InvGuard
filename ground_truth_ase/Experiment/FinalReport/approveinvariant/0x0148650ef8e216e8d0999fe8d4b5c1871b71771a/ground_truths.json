{
  "TokenERC20": {
    "invariants": [
      {
        "name": "Total Supply Consistency",
        "description": "The sum of all balances plus burned tokens should always equal the total supply unless tokens are intentionally burned.",
        "expression": "sum(balanceOf) <= totalSupply"
      },
      {
        "name": "No Overflow on Transfer",
        "description": "No overflow should occur when adding tokens to a recipient's balance.",
        "expression": "balanceOf[_to] + _value > balanceOf[_to]"
      },
      {
        "name": "Conservation of Tokens on Transfer",
        "description": "The total balance between sender and receiver remains constant after a transfer.",
        "expression": "balanceOf[_from] + balanceOf[_to] == previousBalances"
      },
      {
        "name": "Valid Transfer Addresses",
        "description": "Cannot transfer tokens to the zero address.",
        "expression": "_to != 0x0"
      },
      {
        "name": "Transfer Within Balance",
        "description": "Cannot transfer more than the sender's balance.",
        "expression": "balanceOf[_from] >= _value"
      },
      {
        "name": "TransferFrom Within Allowance",
        "description": "Cannot transfer more than allowed by the owner.",
        "expression": "_value <= allowance[_from][msg.sender]"
      },
      {
        "name": "Allowance Consistency",
        "description": "After `transferFrom`, allowance is decreased by the transferred amount.",
        "expression": "allowance[_from][msg.sender] == oldAllowance - _value"
      },
      {
        "name": "Burn Within Balance",
        "description": "Cannot burn more than the caller's balance.",
        "expression": "balanceOf[msg.sender] >= _value"
      },
      {
        "name": "BurnFrom Within Balance and Allowance",
        "description": "Cannot burn more than allowed or available in balance.",
        "expression": "balanceOf[_from] >= _value && allowance[_from][msg.sender] >= _value"
      },
      {
        "name": "Total Supply Decreases on Burn",
        "description": "Burning tokens reduces total supply by the same amount.",
        "expression": "totalSupply == oldTotalSupply - _value"
      },
      {
        "name": "Initial Supply Assignment",
        "description": "On deployment, total supply is assigned to the contract creator.",
        "expression": "balanceOf[msg.sender] == totalSupply"
      },
      {
        "name": "Approval Sets Correct Allowance",
        "description": "Calling approve sets the spender's allowance to the specified amount.",
        "expression": "allowance[msg.sender][_spender] == _value"
      }
    ]
  }
}

