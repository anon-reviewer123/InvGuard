[
  {
    "name": "SafeMath_mul_correctness",
    "condition": "a == 0 || (a * b) / a == b",
    "context": "SafeMath.mul"
  },
  {
    "name": "SafeMath_sub_safe",
    "condition": "b <= a",
    "context": "SafeMath.sub"
  },
  {
    "name": "SafeMath_add_overflow_check",
    "condition": "a + b >= a",
    "context": "SafeMath.add"
  },
  {
    "name": "SafeMath_cast_to_uint112",
    "condition": "uint112(a) == a",
    "context": "SafeMath.toUINT112"
  },
  {
    "name": "ERC20_totalSupply_consistency",
    "condition": "totalSupply == INITIAL_SUPPLY",
    "context": "LIVETOKEN.constructor"
  },
  {
    "name": "ERC20_balances_sum_equals_totalSupply",
    "condition": "sum(balances.values()) == totalSupply",
    "context": "global"
  },
  {
    "name": "ERC20_transfer_from_requires_enough_balance",
    "condition": "_value <= balances[msg.sender]",
    "context": "BasicToken.transfer"
  },
  {
    "name": "ERC20_transfer_from_requires_nonzero_recipient",
    "condition": "_to != 0x0",
    "context": "BasicToken.transfer"
  },
  {
    "name": "ERC20_transferFrom_checks_allowance_and_balances",
    "condition": "_value <= allowed[_from][msg.sender] && _value <= balances[_from]",
    "context": "StandardToken.transferFrom"
  },
  {
    "name": "ERC20_transferFrom_updates_allowance_correctly",
    "condition": "allowed[_from][msg.sender] = previous_allowance - _value",
    "context": "StandardToken.transferFrom"
  },
  {
    "name": "ERC20_approve_invariant",
    "condition": "_value == 0 || allowed[msg.sender][_spender] == 0",
    "context": "StandardToken.approve"
  },
  {
    "name": "ERC20_allowance_read_consistency",
    "condition": "allowance(_owner, _spender) == allowed[_owner][_spender]",
    "context": "StandardToken.allowance"
  },
  {
    "name": "ERC20_balanceOf_returns_actual_balance",
    "condition": "balanceOf(_owner) == balances[_owner]",
    "context": "BasicToken.balanceOf"
  },
  {
    "name": "LIVETOKEN_initial_distribution_correct",
    "condition": "balances[msg.sender] == INITIAL_SUPPLY",
    "context": "LIVETOKEN.constructor"
  }
]

