[
  {
    "name": "totalSupply_equals_sum_of_balances",
    "expression": "_totalSupply == sum(balances)"
  },
  {
    "name": "zero_address_has_no_balance",
    "expression": "balances[address(0)] == 0"
  },
  {
    "name": "non_negative_balances",
    "expression": "forall addr in balances: balances[addr] >= 0"
  },
  {
    "name": "non_negative_allowances",
    "expression": "forall owner in allowed: forall spender in allowed[owner]: allowed[owner][spender] >= 0"
  },
  {
    "name": "transfer_preserves_total_tokens",
    "expression": "before(balances[msg.sender] + balances[to]) == after(balances[msg.sender] + balances[to])"
  },
  {
    "name": "transferFrom_preserves_total_tokens",
    "expression": "before(balances[from] + balances[to]) == after(balances[from] + balances[to])"
  },
  {
    "name": "transferFrom_decreases_allowance",
    "expression": "allowed[from][msg.sender] == before(allowed[from][msg.sender]) - tokens"
  },
  {
    "name": "approval_sets_allowance_exactly",
    "expression": "allowed[msg.sender][spender] == tokens"
  },
  {
    "name": "constructor_assigns_totalSupply_to_creator",
    "expression": "balances[msg.sender] == _totalSupply"
  },
  {
    "name": "totalSupply_excludes_burned_tokens",
    "expression": "totalSupply() == _totalSupply - balances[address(0)]"
  }
]

