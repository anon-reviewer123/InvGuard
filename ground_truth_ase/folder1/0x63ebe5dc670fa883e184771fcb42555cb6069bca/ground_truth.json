{
  "CORD.sol": {
    "vulnerabilities": [
      "Access Control",
      "Arithmetic Safety",
      "Token Integrity",
      "Authorization",
      "Tax Logic Consistency"
    ],
    "invariants": [
      {
        "description": "Only the designated devFund address can update tax parameters",
        "formal": "msg.sender == _devFund → allow setTaxRate() and setTaxBenefit()",
        "category": "Access Control"
      },
      {
        "description": "Only devFund can burn tokens from its own balance",
        "formal": "msg.sender == _devFund ∧ from == _devFund → allow _burn()",
        "category": "Authorization"
      },
      {
        "description": "All token transfers must maintain total supply",
        "formal": "∀ t: totalSupply_post(t) == totalSupply_pre(t)",
        "category": "Token Integrity"
      },
      {
        "description": "Transfer value must not exceed sender's balance",
        "formal": "∀ t: _balances[from] ≥ value",
        "category": "Arithmetic Safety"
      },
      {
        "description": "TransferFrom must respect approved allowance",
        "formal": "_allowed[from][msg.sender] ≥ value → allow transferFrom()",
        "category": "Access Control"
      },
      {
        "description": "Transfer destination must not be zero address",
        "formal": "to ≠ 0x0",
        "category": "Semantic Validity"
      },
      {
        "description": "If tax is enabled, tax and send amounts must add up to original transfer",
        "formal": "_taxRate > 0 → (tosend + totax == value)",
        "category": "Tax Logic Consistency"
      },
      {
        "description": "Tax beneficiary must receive the taxed amount",
        "formal": "_balances[_taxBenefit] += totax",
        "category": "Tax Logic Consistency"
      },
      {
        "description": "Total supply must never be negative",
        "formal": "_totalSupply ≥ 0",
        "category": "Arithmetic Safety"
      },
      {
        "description": "Spender address in approve(), increaseAllowance(), decreaseAllowance() must not be zero",
        "formal": "spender ≠ 0x0",
        "category": "Access Control"
      }
    ]
  }
}

