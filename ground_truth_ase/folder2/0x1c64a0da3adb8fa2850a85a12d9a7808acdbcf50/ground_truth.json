[
  {
    "invariant": "Sum of all balances equals totalSupply_",
    "expression": "sum(balances[addr] for addr in all_addresses) == totalSupply_"
  },
  {
    "invariant": "Total supply equals INITIAL_SUPPLY after construction",
    "expression": "totalSupply_ == INITIAL_SUPPLY"
  },
  {
    "invariant": "Balance of any address is non-negative",
    "expression": "forall addr: balances[addr] >= 0"
  },
  {
    "invariant": "Allowance is non-negative",
    "expression": "forall (owner, spender): allowed[owner][spender] >= 0"
  },
  {
    "invariant": "Transfer only happens if sender has sufficient balance",
    "expression": "require(_value <= balances[_from])"
  },
  {
    "invariant": "TransferFrom only happens if allowance is sufficient",
    "expression": "require(_value <= allowed[_from][msg.sender])"
  },
  {
    "invariant": "Transfer never sends to 0x0 address",
    "expression": "require(_to != address(0))"
  },
  {
    "invariant": "After approve, allowance is exactly as set",
    "expression": "allowed[msg.sender][_spender] == _value"
  },
  {
    "invariant": "Transfer reduces sender balance and increases recipient balance equally",
    "expression": "balances[_from] -= _value; balances[_to] += _value"
  },
  {
    "invariant": "Event Transfer emitted on successful transfer",
    "expression": "Transfer(_from, _to, _value) emitted after transfer"
  },
  {
    "invariant": "Event Approval emitted on approve/increaseApproval/decreaseApproval",
    "expression": "Approval(owner, spender, value) emitted after state update"
  }
]

