{
  "invariants": [
    {
      "name": "nonNegativeBalances",
      "description": "All balances must be greater than or equal to zero.",
      "expression": "forall(addr in balanceOf): balanceOf[addr] >= 0"
    },
    {
      "name": "totalSupplyInvariant",
      "description": "Total supply must always equal the sum of all balances.",
      "expression": "totalSupply == sum(balanceOf[addr] for addr in balanceOf)"
    },
    {
      "name": "transferPreservesTotal",
      "description": "Transfers do not change total supply.",
      "expression": "on transfer or transferFrom: totalSupply == old(totalSupply)"
    },
    {
      "name": "allowanceNotNegative",
      "description": "Allowances should never be negative.",
      "expression": "forall(owner in allowance): forall(spender in allowance[owner]): allowance[owner][spender] >= 0"
    },
    {
      "name": "validTransfer",
      "description": "Transfer only occurs if sender has sufficient balance.",
      "expression": "on transfer or transferFrom: balanceOf[sender] >= value"
    },
    {
      "name": "burnReducesBalanceAndSupply",
      "description": "Burn reduces sender balance and total supply by burn amount.",
      "expression": "on burn(value): balanceOf[sender] == old(balanceOf[sender]) - value && totalSupply == old(totalSupply) - value"
    },
    {
      "name": "burnFromReducesAllowanceAndSupply",
      "description": "burnFrom reduces allowance and total supply.",
      "expression": "on burnFrom(from, value): allowance[from][sender] == old(allowance[from][sender]) - value && totalSupply == old(totalSupply) - value"
    },
    {
      "name": "nonZeroReceiver",
      "description": "Cannot transfer tokens to the zero address.",
      "expression": "on _transfer: _to != 0x0"
    },
    {
      "name": "approveSetsAllowance",
      "description": "Calling approve sets the allowance correctly.",
      "expression": "on approve(spender, value): allowance[sender][spender] == value"
    },
    {
      "name": "internalTransferBalanceConservation",
      "description": "Internal _transfer preserves total balance between sender and receiver.",
      "expression": "on _transfer(_from, _to, _value): old(balanceOf[_from]) + old(balanceOf[_to]) == balanceOf[_from] + balanceOf[_to]"
    }
  ]
}

