[
  {
    "name": "total_supply_consistency",
    "description": "Sum of all balances + burned tokens should equal totalSupply at initialization",
    "expression": "sum(balanceOf) + burnedTokens == initialTotalSupply",
    "type": "global"
  },
  {
    "name": "non_negative_balances",
    "description": "All user balances must be non-negative",
    "expression": "forall(address a) => balanceOf[a] >= 0",
    "type": "per_account"
  },
  {
    "name": "non_negative_allowance",
    "description": "All allowances must be non-negative",
    "expression": "forall(address a, address b) => allowance[a][b] >= 0",
    "type": "per_account"
  },
  {
    "name": "transfer_invariant",
    "description": "Transfer preserves total tokens between two accounts",
    "expression": "before(balanceOf[_from] + balanceOf[_to]) == after(balanceOf[_from] + balanceOf[_to])",
    "type": "internal_function",
    "function": "_transfer"
  },
  {
    "name": "burn_decreases_total_supply",
    "description": "Burning tokens decreases totalSupply by same amount",
    "expression": "before(totalSupply) == after(totalSupply) + _value",
    "type": "function",
    "function": "burn"
  },
  {
    "name": "burnFrom_decreases_total_supply_and_allowance",
    "description": "Burning from another account decreases allowance and total supply",
    "expression": "before(totalSupply) == after(totalSupply) + _value && before(allowanc_

