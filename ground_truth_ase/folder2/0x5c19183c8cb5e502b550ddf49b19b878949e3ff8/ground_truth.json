[
  {
    "invariant": "Total supply remains constant after construction",
    "condition": "_totalSupply == 120000000000000000000000000"
  },
  {
    "invariant": "Total supply is equal to sum of all non-zero address balances",
    "condition": "_totalSupply == sum(balances[a] for all a) + balances[address(0)]"
  },
  {
    "invariant": "No overflow in balance accounting",
    "condition": "For all a: balances[a] <= _totalSupply"
  },
  {
    "invariant": "No underflow on transfer",
    "condition": "For all calls to transfer(to, tokens): balances[msg.sender] >= tokens"
  },
  {
    "invariant": "No underflow on transferFrom",
    "condition": "For all calls to transferFrom(from, to, tokens): balances[from] >= tokens && allowed[from][msg.sender] >= tokens"
  },
  {
    "invariant": "Allowances cannot exceed _totalSupply",
    "condition": "For all a, b: allowed[a][b] <= _totalSupply"
  },
  {
    "invariant": "Transfer event reflects state change",
    "condition": "On transfer or transferFrom, emit Transfer(from, to, tokens) and update balances accordingly"
  },
  {
    "invariant": "Approval event reflects allowance update",
    "condition": "On approve(spender, tokens), allowed[msg.sender][spender] == tokens and emit Approval"
  },
  {
    "invariant": "Decimals value is constant",
    "condition": "decimals == 18"
  },
  {
    "invariant": "Initial supply is assigned to contract creator",
    "condition": "balances[creator] == _totalSupply after constructor"
  }
]

