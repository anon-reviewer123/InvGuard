[
  {
    "description": "Sum of all balances must never exceed totalSupply",
    "invariant": "sum(balanceOf[all addresses]) <= totalSupply"
  },
  {
    "description": "Total token supply must never increase arbitrarily",
    "invariant": "totalSupply <= initialSupply * 10 ** decimals"
  },
  {
    "description": "No transfer should be allowed to address(0)",
    "invariant": "_to != 0x0 in all _transfer calls"
  },
  {
    "description": "Balance cannot overflow on receiving side in _transfer",
    "invariant": "balanceOf[_to] + _value > balanceOf[_to]"
  },
  {
    "description": "Post-transfer balance consistency must hold",
    "invariant": "balanceOf[_from] + balanceOf[_to] == previousBalances"
  },
  {
    "description": "Cannot burn more tokens than account holds",
    "invariant": "balanceOf[msg.sender] >= _value in burn"
  },
  {
    "description": "Cannot burn more tokens than allowed in burnFrom",
    "invariant": "allowance[_from][msg.sender] >= _value in burnFrom"
  },
  {
    "description": "Allowance should not go negative after transferFrom or burnFrom",
    "invariant": "allowance[_from][msg.sender] >= 0"
  },
  {
    "description": "All balances must be non-negative",
    "invariant": "balanceOf[x] >= 0 for all x"
  },
  {
    "description": "Only initial creator owns all tokens at deployment",
    "invariant": "balanceOf[creator] == totalSupply at deployment"
  },
  {
    "description": "Tokens are only created in constructor",
    "invariant": "totalSupply can only increase in constructor"
  },
  {
    "description": "Only approved allowances can be spent in transferFrom",
    "invariant": "_value <= allowance[_from][msg.sender]"
  }
]

