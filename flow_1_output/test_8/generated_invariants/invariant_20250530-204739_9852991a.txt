Invariant Type: consistency
Generated At: 2025-05-30 20:47:39

Contract Code Snippet:
pragma solidity ^0.4.18;

contract Token {

  mapping(address => uint) balances;
  uint public totalSupply;

  function Token(uint _initialSupply) {
    balances[msg_sender] = totalSupply = _initialSupply;
  }

  function transfer(address _to, uint _value) public returns (bool) {
    // <yes> <report> ARITHMETIC
    require(balances[msg_sender] - _value >= 0);
    // <yes> <report> ARITHMETIC
    balances[msg_sender] -= _value;
    balances[_to] += _value;
    return true;
  }

  function balanceOf(address _owner) public constant returns (uint balance) {
    return balances[_owner];
  }
}

Generated Invariant:
balances[_to] + _value <= totalSupply
