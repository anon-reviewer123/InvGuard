Smart Contract Invariants Summary
Generated At: 2025-05-30 20:27:40
Total Invariants: 5

================================================================================
CONTRACT CODE
================================================================================
pragma solidity ^0.4.23;  
  
/**  
 * @title MultiOwnable  
 */  
contract MultiOwnable {  
  address public root;  
  mapping (address => address) public owners; // owner => parent of owner  
  
  /**  
  * @dev The Ownable constructor sets the original `owner` of the contract to the sender  
  * account.  
  */  
  constructor() public {  
    root = msg.sender;  
    owners[root] = root;  
  }  
  
  /**  
  * @dev Throws if called by any account other than the owner.  
  */  
  modifier onlyOwner() {  
    require(owners[msg.sender] != 0);  
    _;  
  }  
  
  /**  
  * @dev Adding new owners  
  * Note that the "onlyOwner" modifier is missing here.  
  */  
  function newOwner(address _owner) external returns (bool) {  
    require(_owner != 0);  
    owners[_owner] = msg.sender;  
    return true;  
  }  
  
  /**  
  * @dev Deleting owners  
  */  
  function deleteOwner(address _owner) onlyOwner external returns (bool) {  
    require(owners[_owner] == msg.sender || (owners[_owner] != 0 && msg.sender == root));  
    owners[_owner] = 0;  
    return true;  
  }  
}  
  
contract TestContract is MultiOwnable {  
  
  function withdrawAll() onlyOwner {  
    msg.sender.transfer(this.balance);  
  }  
  
  function() payable {  
  }  
}

================================================================================
GENERATED INVARIANTS
================================================================================

1. msg.sender == owners[msg.sender]
----------------------------------------

2. msg.sender != 0
----------------------------------------

3. msg.sender == root for critical operations
----------------------------------------

4. owners[_owner] != 0
----------------------------------------

5. this.balance >= 0
----------------------------------------
